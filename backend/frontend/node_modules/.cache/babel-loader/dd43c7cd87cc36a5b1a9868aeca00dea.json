{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_PRODUCT_FAIL, ALL_PRODUCT_REQUEST, ALL_PRODUCT_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, CLEAR_ERRORS, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL, ADMIN_PRODUCT_REQUEST, ADMIN_PRODUCT_SUCCESS, ADMIN_PRODUCT_FAIL, NEW_PRODUCT_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_FAIL, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAIL, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_SUCCESS, UPDATE_PRODUCT_FAIL } from \"../constants/productConstant\";\nexport const getProduct = (keyword = \"\", currentPage = 1, price = [0, 25000], category) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}`;\n    if (category) {\n      link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&category=${category}`;\n    }\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const createProduct = productData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/admin/product/new`, productData, config);\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const updateProduct = (id, productData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/product/${id}`, productData, config);\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const deleteProduct = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/product/${id}`);\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getAdminProduct = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/admin/products\");\n    dispatch({\n      type: ADMIN_PRODUCT_SUCCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","ALL_PRODUCT_FAIL","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_SUCCESS","CLEAR_ERRORS","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","ADMIN_PRODUCT_REQUEST","ADMIN_PRODUCT_SUCCESS","ADMIN_PRODUCT_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","getProduct","keyword","currentPage","price","category","dispatch","type","link","data","get","payload","error","response","message","createProduct","productData","config","headers","post","updateProduct","id","put","success","deleteProduct","delete","getAdminProduct","products","getProductDetails","product","newReview","reviewData","clearErrors"],"sources":["C:/Users/Dell/OneDrive/Desktop/form_folder/tanishk/frontend/src/actions/productAction.jsx"],"sourcesContent":["import axios from \"axios\";\nimport {\n  ALL_PRODUCT_FAIL,\n  ALL_PRODUCT_REQUEST,\n  ALL_PRODUCT_SUCCESS,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_SUCCESS,\n  CLEAR_ERRORS,\n  NEW_REVIEW_REQUEST,\n  NEW_REVIEW_SUCCESS,\n  NEW_REVIEW_FAIL,\n  ADMIN_PRODUCT_REQUEST,\n  ADMIN_PRODUCT_SUCCESS,\n  ADMIN_PRODUCT_FAIL,\n  NEW_PRODUCT_REQUEST,\n  NEW_PRODUCT_SUCCESS,\n  NEW_PRODUCT_FAIL,\n  DELETE_PRODUCT_REQUEST,\n  DELETE_PRODUCT_SUCCESS,\n  DELETE_PRODUCT_FAIL,\n  UPDATE_PRODUCT_REQUEST,\n  UPDATE_PRODUCT_SUCCESS,\n  UPDATE_PRODUCT_FAIL,\n} from \"../constants/productConstant\";\n\nexport const getProduct =\n  (keyword = \"\", currentPage = 1, price = [0, 25000], category) =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: ALL_PRODUCT_REQUEST });\n      let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}`;\n      if (category) {\n        link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&category=${category}`;\n      }\n      const { data } = await axios.get(link);\n      dispatch({\n        type: ALL_PRODUCT_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_PRODUCT_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n\nexport const createProduct = (productData) => async (dispatch) => {\n  try {\n    dispatch({ type: NEW_PRODUCT_REQUEST });\n\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    const { data } = await axios.post(\n      `/api/v1/admin/product/new`,\n      productData,\n      config\n    );\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const updateProduct = (id, productData) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\n\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    const { data } = await axios.put(\n      `/api/v1/admin/product/${id}`,\n      productData,\n      config\n    );\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_PRODUCT_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const getAdminProduct = () => async (dispatch) => {\n  try {\n    dispatch({ type: ADMIN_PRODUCT_REQUEST });\n    const { data } = await axios.get(\"/api/v1/admin/products\");\n    dispatch({\n      type: ADMIN_PRODUCT_SUCCESS,\n      payload: data.products,\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const getProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n    const { data } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const newReview = (reviewData) => async (dispatch) => {\n  try {\n    dispatch({ type: NEW_REVIEW_REQUEST });\n\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    const { data } = await axios.put(`/api/v1/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}