{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, CLEAR_ERRORS, REGISTER_USER_REQUEST, REGISTER_USER_FAIL, REGISTER_USER_SUCCESS, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS, UPDATE_PROFILE_FAIL, UPDATE_PASSWORD_REQUEST, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAIL } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const register = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/register`, userData, config);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const loadUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/me`);\n    dispatch({\n      type: LOAD_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    await axios.get(`/api/v1/logout`);\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGOUT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const updateProfile = userData => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PROFILE_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/me/update`, userData, config);\n    dispatch({\n      type: UPDATE_PROFILE_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const updatePassword = passwords => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/password/update`, passwords, config);\n    dispatch({\n      type: UPDATE_PASSWORD_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PASSWORD_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","CLEAR_ERRORS","REGISTER_USER_REQUEST","REGISTER_USER_FAIL","REGISTER_USER_SUCCESS","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAIL","axios","login","email","password","dispatch","type","config","headers","data","post","payload","user","error","response","message","register","userData","loadUser","get","logout","updateProfile","put","success","updatePassword","passwords","clearErrors"],"sources":["C:/Users/Dell/OneDrive/Desktop/new_folder/backend/frontend/src/actions/UserAction.jsx"],"sourcesContent":["import {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  CLEAR_ERRORS,\n  REGISTER_USER_REQUEST,\n  REGISTER_USER_FAIL,\n  REGISTER_USER_SUCCESS,\n  LOAD_USER_REQUEST,\n  LOAD_USER_SUCCESS,\n  LOAD_USER_FAIL,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAIL,\n  UPDATE_PROFILE_REQUEST,\n  UPDATE_PROFILE_SUCCESS,\n  UPDATE_PROFILE_FAIL,\n  UPDATE_PASSWORD_REQUEST,\n  UPDATE_PASSWORD_SUCCESS,\n  UPDATE_PASSWORD_FAIL,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: LOGIN_REQUEST });\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n    const { data } = await axios.post(\n      `/api/v1/login`,\n      { email, password },\n      config\n    );\n    dispatch({ type: LOGIN_SUCCESS, payload: data.user });\n  } catch (error) {\n    dispatch({ type: LOGIN_FAIL, payload: error.response.data.message });\n  }\n};\n\nexport const register = (userData) => async (dispatch) => {\n  try {\n    dispatch({ type: REGISTER_USER_REQUEST });\n    const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const { data } = await axios.post(`/api/v1/register`, userData, config);\n    dispatch({ type: REGISTER_USER_SUCCESS, payload: data.user });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const loadUser = () => async (dispatch) => {\n  try {\n    dispatch({ type: LOAD_USER_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/me`);\n    dispatch({ type: LOAD_USER_SUCCESS, payload: data.user });\n  } catch (error) {\n    dispatch({ type: LOAD_USER_FAIL, payload: error.response.data.message });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  try {\n    await axios.get(`/api/v1/logout`);\n    dispatch({ type: LOGOUT_SUCCESS });\n  } catch (error) {\n    dispatch({ type: LOGOUT_FAIL, payload: error.response.data.message });\n  }\n};\n\nexport const updateProfile = (userData) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_PROFILE_REQUEST });\n    const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n    const { data } = await axios.put(`/api/v1/me/update`, userData, config);\n    dispatch({ type: UPDATE_PROFILE_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const updatePassword = (passwords) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_PASSWORD_REQUEST });\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n    const { data } = await axios.put(\n      `/api/v1/password/update`,\n      passwords,\n      config\n    );\n    dispatch({ type: UPDATE_PASSWORD_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PASSWORD_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}